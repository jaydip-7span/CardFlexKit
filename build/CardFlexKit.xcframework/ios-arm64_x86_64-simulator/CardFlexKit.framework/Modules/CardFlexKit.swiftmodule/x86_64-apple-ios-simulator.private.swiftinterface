// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios18.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name CardFlexKit
@_exported import CardFlexKit
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct Card {
  public var name: Swift.String
  public var number: Swift.String
  public var year: Swift.String
  public var month: Swift.String
  public var cvv: Swift.String
  public init(number: Swift.String = "", name: Swift.String = "", year: Swift.String = "", month: Swift.String = "", cvv: Swift.String = "")
}
public enum ActiveField {
  case number
  case name
  case month
  case year
  case cvv
  public static func == (a: CardFlexKit.ActiveField, b: CardFlexKit.ActiveField) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum CardVariant {
  case cardinfo(name: Swift.String, cardIcon: Swift.String, color: SwiftUICore.Color)
}
@_Concurrency.MainActor @preconcurrency public struct CardFlexAnimationView : SwiftUICore.View {
  @SwiftUICore.Binding @_projectedValueProperty($card) @_Concurrency.MainActor @preconcurrency public var card: CardFlexKit.Card {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating _modify
  }
  @_Concurrency.MainActor @preconcurrency public var $card: SwiftUICore.Binding<CardFlexKit.Card> {
    get
  }
  @SwiftUICore.State @_projectedValueProperty($cardVariant) @_Concurrency.MainActor @preconcurrency public var cardVariant: CardFlexKit.CardVariant {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating _modify
  }
  @_Concurrency.MainActor @preconcurrency public var $cardVariant: SwiftUICore.Binding<CardFlexKit.CardVariant> {
    get
  }
  @_Concurrency.MainActor @preconcurrency public var onAction: () -> ()
  @_Concurrency.MainActor @preconcurrency public init(card: SwiftUICore.Binding<CardFlexKit.Card>, cardVariant: CardFlexKit.CardVariant, onAction: @escaping () -> ())
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s11CardFlexKit0aB13AnimationViewV4bodyQrvp", 0) __
}
extension CardFlexKit.ActiveField : Swift.Equatable {}
extension CardFlexKit.ActiveField : Swift.Hashable {}
extension CardFlexKit.CardFlexAnimationView : Swift.Sendable {}
